apiVersion: batch/v1
kind: Job
metadata:
  name: build-job-{{BUILD_ID}}
spec:
  backoffLimit: 0
  activeDeadlineSeconds: 600
  template:
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001 
      
      initContainers:
      - name: git-cloner
        image: alpine/git:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -e
            git clone --branch "{{GIT_BRANCH}}" --single-branch --depth 1 "{{GIT_CLONE_URL}}" /workspace
            
            DOCKERFILE_PATH=$(find /workspace -maxdepth 2 -type f -name "*ockerfile" | head -n 1)
            if [ -f "$DOCKERFILE_PATH" ]; then
              echo "--- Fixing short-names in $DOCKERFILE_PATH ---"
              # Utilise 'sed' pour ajouter 'docker.io/library/' aux images qui n'ont pas de domaine
              sed -i -E 's/^FROM ([^/]+)$/FROM docker.io\/library\/\1/i' "$DOCKERFILE_PATH"
              sed -i -E 's/^FROM ([a-zA-Z0-9_-]+)\/([^/]+)$/FROM docker.io\/\1\/\2/i' "$DOCKERFILE_PATH"
              echo "--- Dockerfile fixed. Content: ---"
              cat "$DOCKERFILE_PATH"
            else
              echo "--- No Dockerfile found, skipping fix. ---"
            fi
        volumeMounts:
          - name: workspace
            mountPath: /workspace

      containers:
      - name: buildah-builder
        image: {{BUILDER_IMAGE}}
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -e
            export BUILDAH_ROOT=/home/builder/storage
            export BUILDAH_FORMAT=oci
            echo "--- Starting build process ---"
            buildah --root $BUILDAH_ROOT bud \
              --format $BUILDAH_FORMAT \
              --pull \
              -t {{TARGET_IMAGE}} /workspace
            echo "--- Build complete, starting push ---"
            buildah --root $BUILDAH_ROOT push --authfile /home/builder/.docker/config.json {{TARGET_IMAGE}}
            echo "--- Push complete ---"
        volumeMounts:
          - name: workspace
            mountPath: /workspace
          - name: registry-credentials
            mountPath: /home/builder/.docker
            readOnly: true
      
      volumes:
        - name: workspace
          emptyDir: {}
        - name: registry-credentials
          secret:
            secretName: registry-secret
            items:
              - key: .dockerconfigjson
                path: config.json
      
      restartPolicy: Never